[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\mihne\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\mihne\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.8 (Oracle Corporation Java 17)
[debug]       Load.loadUnit: plugins took 94.2547ms
[debug]       Load.loadUnit: defsScala took 0.2904ms
[debug] [Loading] Scanning directory C:\Users\mihne\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\mihne\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 14.8411 ms
[debug]           Load.resolveProject(global-plugins) took 40.8183ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\mihne\.sbt\1.0\plugins, plugins: List(<none>))) took 76.7221ms
[debug] [Loading] Done in C:\Users\mihne\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 95.9795ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2733ms
[debug]     Load.loadUnit(file:/C:/Users/mihne/.sbt/1.0/plugins/, ...) took 199.8739ms
[debug]   Load.apply: load took 350.3005ms
[debug]   Load.apply: resolveProjects took 5.4423ms
[debug]   Load.apply: finalTransforms took 59.2055ms
[debug]   Load.apply: config.delegates took 6.5462ms
[debug]   Load.apply: Def.make(settings)... took 337.4718ms
[debug]   Load.apply: structureIndex took 85.7732ms
[debug]   Load.apply: mkStreams took 1.0593ms
[info] loading global plugins from C:\Users\mihne\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4681.9502ms
[debug]           Load.loadUnit: plugins took 32.6321ms
[debug]           Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory D:\schelet_scala_LFA\skel-scala\project
[debug]             Load.loadUnit: mkEval took 7.0199ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\schelet_scala_LFA\skel-scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.1944 ms
[info] loading settings for project skel-scala-build from idea.sbt ...
[debug]               Load.resolveProject(skel-scala-build) took 11.0143ms
[debug]             Load.loadTransitive: finalizeProject(Project(id skel-scala-build, base: D:\schelet_scala_LFA\skel-scala\project, plugins: List(<none>))) took 12.6746ms
[debug] [Loading] Done in D:\schelet_scala_LFA\skel-scala\project, returning: (skel-scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1929.1972ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.9901ms
[debug]         Load.loadUnit(file:/D:/schelet_scala_LFA/skel-scala/project/, ...) took 1967.582ms
[debug]       Load.apply: load took 1969.1383ms
[debug]       Load.apply: resolveProjects took 0.1545ms
[debug]       Load.apply: finalTransforms took 9.8177ms
[debug]       Load.apply: config.delegates took 0.38ms
[debug]       Load.apply: Def.make(settings)... took 77.8882ms
[debug]       Load.apply: structureIndex took 26.9347ms
[debug]       Load.apply: mkStreams took 0.0021ms
[info] loading project definition from D:\schelet_scala_LFA\skel-scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 5546.0172ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory D:\schelet_scala_LFA\skel-scala
[debug]       Load.loadUnit: mkEval took 0.5115ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8088 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 25.4104ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\schelet_scala_LFA\skel-scala, plugins: List(<none>))) took 29.285ms
[debug] [Loading] Done in D:\schelet_scala_LFA\skel-scala, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1424.4962ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.0243ms
[debug]   Load.loadUnit(file:/D:/schelet_scala_LFA/skel-scala/, ...) took 6989.2978ms
[debug] Load.apply: load took 6990.7194ms
[debug] Load.apply: resolveProjects took 0.0855ms
[debug] Load.apply: finalTransforms took 30.4567ms
[debug] Load.apply: config.delegates took 0.321ms
[debug] Load.apply: Def.make(settings)... took 61.0384ms
[debug] Load.apply: structureIndex took 32.0205ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to LFA-2022-2023 (in build file:/D:/schelet_scala_LFA/skel-scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 62056 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 62056, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to LFA-2022-2023 (in build file:/D:/schelet_scala_LFA/skel-scala/)
[debug] > Exec(idea-shell, None, None)
